mtcars[c(2, 6),]
x[2,]
nrow(x)
subset(x=2,)
subset(x=2,y=6)
subset(x[2,],)
x<- c("Ozone","Solar.R","Wind","Temp","Month","Day")
y<- c(1:154)
x[2,]
y[2,]
y[2]
m <- matrix (nrow=154,ncol=6)
View(m)
View(m)
x<- c("Ozone","Solar.R","Wind","Temp","Month","Day")
y<- c(1:154)
cbind(x,y)
data <- read.table("hw1_data.csv")
x = read.table("hw1_data.csv")
x = read.table("coursera/hw1_data.csv")
hw1_data <- read.csv("~/Desktop/coursera/hw1_data.csv")
View(hw1_data)
x["Ozone", 47]
View(hw1_data)
View(hw1_data)
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my
my_sqrt
my_div
1:20
pi:10
15:1
`:`
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq(5, 10, lenght=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "malika")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c("X", 3), c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"))
paste(1:3, c("X,"))
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
Type swirl()
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(4, 7, 8)]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA).
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
indentical(vect,vect2)
identical(vect)
names(vect2) <- c("foo", "bar", "norf")
info(identical)
idendentical(vect, vect2)
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?
?matrix()
?matrix
?matrix
my_matrix <- c(1:20, 4, 5)
my_matrix2 <- c(1:20, 4, 5)
my_matrix2 <- matrix(1:20, 4, 5)
my_matrix2 <- matrix(1:20, 4, 5, byrow = FALSE, dimnames = NULL)
my_matrix2 <- matrix(c(1:20), nrow = 4, ncol = 5, byrow = TRUE, dimnames = NULL)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5, byrow = TRUE, dimnames = NULL)
my_matrix2 = matrix(
+   c(1:20),
+   nrow=4,
+   ncol=5)
B = matrix(c(1:20), nrow = 4, ncol = 5)
my_matrix2 <- matrix(c(1:20), nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, 4, 5)
> my_matrix2 = matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 = matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 = matrix(1:20, 4, 5)
info()
play()
my_matrix2 = matrix(1:20, 4, 5)
my_matrix2
nxt()
my_matrix2 = matrix(1:20, 4, 5)
play()
my_matrix2
my_matrix2 = matrix(1:20, 4, 5)
my_matrix2
dim(my_matrix2)
nxt()
my_matrix2 <- matrix(1:20, 4, 5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
0
bye
bye()
swirl()
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames("patients", "age", "weight", "bp", "rating", "test")
cnames <- c("patients", "age", "weight", "bp", "rating", "test")
colnames <- c("patients", "age", "weight", "bp", "rating", "test")
c("patients", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- c("patients", "age", "weight", "bp", "rating", "test")
cnames(my_data) <- c("patients", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- "patients", "age", "weight", "bp", "rating", "test"
names(my_data) [1] <- "patients"
bye()
swirl()
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
bye()
read.csv(hw1_data.csv)
coursera <- read.csv(file="simple.csv",head=TRUE,sep=",")
coursera <- read.csv(file="hw1_data.csv",head=TRUE,sep=",")
dir()
4
getwd()
dir()
coursera <- read.csv(file="/Users/rachidbenadid/desktop/coursera/hw1_data.csv",head=TRUE,sep=",")
coursera
colnames(coursera)
coursera[6, 2]
coursera[6:2]
coursera(2, 6)
class(coursera)
subset(2,6)
data[2,]
coursera[2,]
coursera[1:2, ]
dim(coursera)
coursera[152:153, ]
"Ozone"
coursera[1, 47]
coursera[47, 1]
is.na(coursera)
sum(is.na(x))
is.na("Ozone")
sum(!is.na(x[153:1])
sum(!is.na(x[153:1]))
sum(is.na(x[153:1]))
sum(!is.na(x[153:1]))
coursera
sum(!is.na(x[153:1]))
sum(is.na(x[153:1]))
is.na(coursera)
coursera_na <- coursera > 0
coursera_na
coursera
sum(is.na(coursera[153:1])
sum(is.na(coursera[153:1]))
sum(is.na(coursera[153:1]))
sum(is.na(coursera))
sum(!is.na(coursera))
sum(is.na(coursera[,1]))
coursera_na <- sum(!is.na(coursera[,1])) - sum(is.na(coursera[,1]))
coursera_na
mean(courserasum[,1], coursera_na)
mean(coursera[,1], coursera_na)
coursera[,1]
coursera_bis <- coursera[,1] - NA
coursera_bis
colSums(!is.na(coursera))
sum(coursera[,1]) & sum(!is.na(coursera[,1]))
swirl()
2
bye()
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
my_data
bye()
coursera
mean(coursera)
colmeans(coursera[,1], na.rm = NA)
colMeans(coursera[,1], na.rm = FALSE)
colMeans(coursera[1:153,1], na.rm = FALSE)
coursera[,1]
x <- coursera[,1]
x
sum(x)
means(x, na.rm = FALSE)
mean(x, na.rm = FALSE)
mean(x, na.rm = TRUE)
names(coursera)
y <- coursera[,4]
w <- x[x > 31] & y[y > 90]
x[x > 31]
y[y > 90]
w <- coursera[x[x > 31] | y[y > 90]]
coursera[x[x > 31] & y[y > 90]]
subset(coursera, x[x > 31] & y[y > 90])
> subset(coursera, x > 31 & y > 90)
x
x_clean <- x[x > 31] & !is.na(coursera)
x_clean <- intersection(x[x > 31], !is.na(coursera))
subset(coursera, Ozone > 31 & Temp > 90)
mean(Solar.R)
Solar.R
"Solar.R"
Ozone
mean(coursera[,2])
mean(coursera[2,])
subset_18 <- subset(coursera, Ozone > 31 & Temp > 90)
subset_18
mean(subset_18[,2])
subset(coursera[Month = 6])
subset_19 <- subset(coursera, Month = 6)
subset_19
subset_19 <- subset(coursera, Month == 6)
subset_19
mean(subset_19[,4]  )
subset_20 <- subset(coursera, Month == 5)
subset_20
max(subset_20[,1], na.ra = FALSE)
subset_20[,1]
!is.na(subset_20[,1])
s <- subset_20[,1]
max(s, na.rm = FALSE)
which.max(s)
s
d <- s[!is.na(s)]
d
max(d)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(4)
library(datasets)
data(iris)
?iris
x <- c(Iris setosa, versicolor, virginica)
x <- c(iris setosa, versicolor, virginica)
x <- c(Iris setosa, versicolor, virginica)
class(iris)
View(iris)
f<- gl(3,50)
x<- c(Sepal.lenght, Sepal.Width, Petal.Lenght, Petal.Width)
x<- c(Sepal.Lenght, Sepal.Width, Petal.Lenght, Petal.Width)
x<- c(Sepal.Length, Sepal.Width, Petal.Lenght, Petal.Width)
colMeans(1)
colMeans(iris)
colMeans(2,1)
colnames
colNames
colnames(iris)
colMeans(iris[1,])
x <- 1:5
colMeans(x,f, na.rm = FALSE)
x
f
sapply(iris,mean)
sapply(iris,3,mean)
sapply(iris[virginica],mean)
iris3
sapply(iris3,mean, na.rm = False)
mean(iris3)
iris3(Virginica)
iris3[Virginica]
iris3['Virginica']
s <- split (iris, iris$Species)
lapply(s, function(x) colMeans (x[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]))
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
rowMeans(iris[, 1:4])
colMeans(iris)
library(datasets)
data(mtcars)
mtcars
View(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
p <- split(mtcars, mtcars$hp)
p <- split(mtcars, mtcars$cyl)
p
lapply(p, function(x) colmeans(x[,"hp"]))
lapply(p, function(x) means(x[,"hp"]))
lapply(p, means(x[,"hp"]))
lapply(p, means(mtcars[,"hp"]))
d <- mtcars[,4]
d
p(6)
p[6]
p["6"]
tapply(d, p["6"], mean)
mean(p["6"],d)
tapply(d, p["6"], mean)
tapply(d, p, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
a <- tapply(mtcars$hp, mtcars$cyl, mean)
a[4]
a['4']
a['8'] - a['4']
debug(ls)
ls
setwd("~/ProgrammingAssignment2")
read.table(cachematrix.R)
